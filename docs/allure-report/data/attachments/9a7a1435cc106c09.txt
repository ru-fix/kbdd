    @Test
    suspend fun `string asserts`() {
        val url = "/asserts/standard/string/text"

        mockServer.`Given server for url answers json`(
                url,
                """
                {
                    "text": "Brown little fox with 4 friends",
                    "word": "orange"
                }
                """)

        request {
            baseUri(mockServer.baseUrl())
            get(url)
        }

        bodyJson()["text"].isContains("little")
        bodyJson()["text"].isMatches(".*\\d.*")
        bodyJson()["word"].isGreaterThan("apple")
        bodyJson()["word"].isGreaterThanOrEqual("apple")
        bodyJson()["word"].isGreaterThanOrEqual("orange")
        bodyJson()["word"].isEquals("orange")
        bodyJson()["word"].isLessThanOrEqual("orange")
        bodyJson()["word"].isLessThanOrEqual("peach")
        bodyJson()["word"].isLessThan("peach")
    }

    @Description("""
        To simplify assertion logic string values in response can be automatically cast to numbers. 
        Casting relay on asserting method argument. 
        If you compare value from response with number, and value in response is a string, 
        but can be casted to number. Then KBDD will try to automatically cast string value 
        to a numeric type of the argument.
        Test demonstratest difference in comparing string with string and 
        comparing string with numbers with auto-cast in action.
        """)
    @Test
