{
  "uid" : "e87e862459555acf",
  "name" : "asserts can be combined into single assert block",
  "fullName" : "asserts can be combined into single assert block",
  "historyId" : "7300b63cf9e6524b7daf8433540d5b13",
  "time" : {
    "start" : 1633116978978,
    "stop" : 1633116983403,
    "duration" : 4425
  },
  "description" : "\n        Multiple assert of response subtree can be combained. \n        You can invoke assert block on parent node \n        and access and validate values within parent subtree. \n    ",
  "descriptionHtml" : "<pre><code>    Multiple assert of response subtree can be combained. \n    You can invoke assert block on parent node \n    and access and validate values within parent subtree. \n</code></pre>\n",
  "status" : "passed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n        Multiple assert of response subtree can be combained. \n        You can invoke assert block on parent node \n        and access and validate values within parent subtree. \n    ",
    "status" : "passed",
    "steps" : [ {
      "name" : "Code snippet",
      "time" : {
        "start" : 1633116979149,
        "stop" : 1633116979149,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ef324db16718f5c2",
        "name" : "code-snippet",
        "source" : "ef324db16718f5c2.txt",
        "type" : "text/plain",
        "size" : 1121
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "Given server for url answers json (url: /asserts/standard/complex, response: \n                {\n                    \"number\": 1024,\n                    \"word\": \"orange\"\n                }\n                )",
      "time" : {
        "start" : 1633116979214,
        "stop" : 1633116979215,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "single-expression field assert without assert block",
      "time" : {
        "start" : 1633116982908,
        "stop" : 1633116983298,
        "duration" : 390
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "bodyJson()[\"number\"] > 100",
        "time" : {
          "start" : 1633116983298,
          "stop" : 1633116983298,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "single-expression field assert iside explicit assert block",
      "time" : {
        "start" : 1633116983298,
        "stop" : 1633116983315,
        "duration" : 17
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "single-expression assert with field selector inside explicit assert block",
      "time" : {
        "start" : 1633116983316,
        "stop" : 1633116983318,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "multi-expression assert",
      "time" : {
        "start" : 1633116983318,
        "stop" : 1633116983321,
        "duration" : 3
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "b0c45a0f6d8cd890",
      "name" : "request http://localhost:43369/asserts/standard/complex",
      "source" : "b0c45a0f6d8cd890.txt",
      "type" : "text/plain",
      "size" : 254
    }, {
      "uid" : "16cb7b2f6b99e8c3",
      "name" : "response http://localhost:43369/asserts/standard/complex",
      "source" : "16cb7b2f6b99e8c3.txt",
      "type" : "text/plain",
      "size" : 263
    } ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "framework",
    "value" : "corounit"
  }, {
    "name" : "package",
    "value" : "Documentation"
  }, {
    "name" : "suite",
    "value" : "ru.fix.kbdd.example.cases.documentation.ResponseAsserts"
  }, {
    "name" : "feature",
    "value" : "Standard"
  }, {
    "name" : "testMethod",
    "value" : "asserts can be combined into single assert block"
  }, {
    "name" : "epic",
    "value" : "Asserts"
  }, {
    "name" : "testClass",
    "value" : "ru.fix.kbdd.example.cases.documentation.ResponseAsserts"
  }, {
    "name" : "thread",
    "value" : "a0eefd12-73cb-4b97-a82c-2ca6413f57e6"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "e87e862459555acf.json",
  "parameterValues" : [ ]
}